name: Jekyll Deploy

on:
  push:
    branches:
      - main  # Deploy from main branch

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUNDLE_DEPLOYMENT: false
      BUNDLE_PATH: vendor/bundle
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for incremental builds

      # Cache system dependencies
      - name: Cache system packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/jekyll.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      # Cache Python dependencies
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      # Install system dependencies with optimizations
      - name: ðŸ“¦ Install system dependencies (ImageMagick + Jupyter)
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends imagemagick libmagickwand-dev python3-pip
          pip3 install --upgrade --user jupyter nbconvert

      # Cache Jekyll build artifacts
      - name: Cache Jekyll build
        uses: actions/cache@v4
        with:
          path: |
            .jekyll-cache
            .jekyll-metadata
            vendor
          key: ${{ runner.os }}-jekyll-${{ hashFiles('**/*.md', '**/*.html', '**/*.yml', '_config.yml', 'Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-jekyll-

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build Jekyll site
        run: |
          export JEKYLL_ENV=production
          bundle exec jekyll build --destination ./_site --incremental --profile
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
