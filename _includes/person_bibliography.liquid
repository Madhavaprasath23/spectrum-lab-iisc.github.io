{% comment %}
  Filter publications by email address for person pages
  Usage: {% include person_bibliography.liquid email=page.email %}
{% endcomment %}

{% assign person_email = include.email %}

{% if person_email %}
  <div class="person-publications">
    <p class="text-muted mb-3"><small>Showing publications for: {{ person_email }}</small></p>
    
    {% comment %} For now, show all publications and let JavaScript handle filtering {% endcomment %}
    {% comment %} We'll add client-side filtering based on email {% endcomment %}
    <ol class="bibliography" id="person-bibliography">
    {% bibliography %}
    </ol>
    
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      const personEmail = '{{ person_email }}';
      const bibliographyList = document.getElementById('person-bibliography');
      const allItems = bibliographyList.querySelectorAll('li');
      let visibleCount = 0;
      
      allItems.forEach(function(item) {
        const itemText = item.innerHTML.toLowerCase();
        
        // Check if this publication contains the person's email
        if (itemText.includes(personEmail.toLowerCase())) {
          item.style.display = 'list-item';
          visibleCount++;
        } else {
          item.style.display = 'none';
        }
      });
      
      // Add a message if no publications found
      if (visibleCount === 0) {
        const noResultsMsg = document.createElement('p');
        noResultsMsg.className = 'text-muted';
        noResultsMsg.innerHTML = 'No publications found for this author.';
        bibliographyList.parentNode.insertBefore(noResultsMsg, bibliographyList);
        bibliographyList.style.display = 'none';
      }
    });
    </script>
  </div>
  
  {% comment %} If no results, try alternative patterns {% endcomment %}
  <script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function() {
      const publicationsDiv = document.getElementById('person-publications');
      const filteredBibDiv = publicationsDiv.querySelector('.filtered-bibliography');
      
      // If no publications found with the direct query, try JavaScript filtering
      if (filteredBibDiv && filteredBibDiv.children.length === 0) {
        // Hide empty filtered div
        filteredBibDiv.style.display = 'none';
        
        // Create a new div for JavaScript-filtered results
        const jsFilteredDiv = document.createElement('div');
        jsFilteredDiv.className = 'js-filtered-bibliography';
        
        // Get all bibliography entries from the global bibliography (if loaded)
        const personEmail = '{{ person_email }}';
        
        // Try to fetch and filter bibliography data
        fetch('{{ site.baseurl }}/assets/bibliography/papers.json')
          .then(response => response.json())
          .then(data => {
            const matchingPubs = data.filter(pub => 
              pub.emails && pub.emails.includes(personEmail)
            );
            
            if (matchingPubs.length > 0) {
              // Render matching publications
              matchingPubs.forEach(pub => {
                const pubElement = createPublicationElement(pub);
                jsFilteredDiv.appendChild(pubElement);
              });
              publicationsDiv.appendChild(jsFilteredDiv);
            } else {
              jsFilteredDiv.innerHTML = '<p class="text-muted">No publications found for this author.</p>';
              publicationsDiv.appendChild(jsFilteredDiv);
            }
          })
          .catch(error => {
            console.log('Could not load bibliography data:', error);
            jsFilteredDiv.innerHTML = '<p class="text-muted">Publications will be loaded separately.</p>';
            publicationsDiv.appendChild(jsFilteredDiv);
          });
      }
    });
    
    function createPublicationElement(pub) {
      const li = document.createElement('li');
      li.className = 'publication-item';
      
      let html = '<div class="publication-content">';
      
      // Authors
      if (pub.author) {
        html += `<span class="publication-authors">${pub.author}</span>. `;
      }
      
      // Title
      if (pub.title) {
        html += `<strong>${pub.title}</strong>. `;
      }
      
      // Journal/Venue
      if (pub.journal) {
        html += `<em>${pub.journal}</em>`;
      } else if (pub.booktitle) {
        html += `<em>${pub.booktitle}</em>`;
      }
      
      // Year
      if (pub.year) {
        html += `, ${pub.year}`;
      }
      
      // DOI/URL
      if (pub.url) {
        html += ` <a href="${pub.url}" target="_blank">[Link]</a>`;
      }
      
      html += '</div>';
      li.innerHTML = html;
      
      return li;
    }
  </script>
  
{% else %}
  <p class="text-muted">No email address specified for filtering publications.</p>
{% endif %}